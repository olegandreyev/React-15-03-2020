{"version":3,"sources":["tasks/week-1/components/ValidatedInput.js","tasks/week-1/components/ProductFormRow.js","tasks/week-1/components/ProductRow.js","tasks/week-1/components/ProductList.js","tasks/week-1/products-api.js","tasks/week-1/components/ErrorBoundary.js","tasks/week-2/components/FocusInput.js","tasks/week-1/Week1.js","tasks/week-2/components/Cube.js","tasks/week-2/components/AutoFocusInput.js","tasks/week-3/blog/components/Comments.js","tasks/week-3/blog/components/Post.js","tasks/week-3/blog/components/providers/postsHoc.js","tasks/week-3/blog/components/PostList.js","tasks/week-3/blog/components/AuthorInfo.js","tasks/week-3/blog/Blog.js","tasks/week-3/glide/Glide.js","tasks/week-3/render-props-example/Draggable.js","tasks/week-3/render-props-example/Circle.js","tasks/week-3/blog/components/providers/PostsProvider.js","tasks/week-3/render-props-example/Example.js","tasks/week-3/context/ThemeContext.js","tasks/week-3/context/UserContext.js","tasks/week-3/context/Button.js","tasks/week-3/context/Text.js","tasks/week-3/context/Example.js","tasks/week-3/hooks/Example-use-state.js","tasks/week-4/todoapp-hw/contexts/ThemeContext.js","tasks/week-4/todoapp-hw/api-client.js","tasks/week-4/blog-v2/containers/HomePage.js","tasks/week-4/blog-v2/api-client.js","tasks/week-4/blog-v2/hooks/useData.js","tasks/week-4/blog-v2/components/Comments.js","tasks/week-4/blog-v2/components/PostItem.js","tasks/week-4/blog-v2/containers/PostsPage.js","tasks/week-4/blog-v2/containers/UsersPage.js","tasks/week-4/blog-v2/containers/AlbumsPage.js","tasks/week-4/blog-v2/containers/AlbumPage.js","tasks/week-4/blog-v2/containers/404.js","tasks/week-4/blog-v2/containers/UserPage.js","tasks/week-4/blog-v2/Blog.js","tasks/week-5/redux-examples/redux/actions/todo.js","tasks/week-5/redux-examples/redux/reducers/todo.js","tasks/week-5/redux-examples/redux/reducers/index.js","tasks/week-5/redux-examples/redux/reducers/count.js","tasks/week-5/redux-examples/redux/actions/count.js","tasks/week-5/redux-examples/redux/store.js","tasks/week-5/redux-examples/containers/TodoList.js","tasks/week-5/redux-examples/containers/AddTodoForm.js","tasks/week-5/redux-examples/App.js","tasks/week-6/reddit-app/redux/reducers.js","tasks/week-6/reddit-app/redux/actions.js","tasks/week-6/reddit-app/redux/configureStore.js","App.js","serviceWorker.js","index.js"],"names":["ValidatedInput","state","touched","touchInput","setState","this","validate","prevProps","value","props","error","rest","className","onBlur","Component","requiredValidator","ProductFormRow","onChangeField","e","target","name","submitProductForm","onSubmit","resetFields","title","type","price","quantity","product","disabled","isDisabled","onChange","onClick","defaultProps","ProductRow","editMode","onEdit","updatedProduct","onEditProduct","prevUserId","userId","onRemoveProduct","id","ProductList","products","onAddProduct","color","style","map","key","Promise","resolve","setTimeout","ErrorBoundary","hasError","errorInfo","console","log","children","FocusInput","inputRef","React","createRef","current","focus","ref","Comments","comments","loading","postId","fetchComments","fetch","then","response","json","data","Comment","Group","comment","Avatar","src","Content","Author","as","email","Metadata","Text","body","Actions","Action","Post","showComments","onShowComments","onClickPost","post","Item","Header","Meta","Description","Extra","PostList","onSelectPost","posts","isFetching","Container","Dimmer","active","inverted","Loader","postsProvider","fetchPosts","AuthorInfo","authorInfo","albums","authorId","fetchAuthorInfo","fetchAlbums","Card","username","company","phone","extra","Icon","length","List","a","Segment","Glide","slider","glider","GlideJs","options","mount","update","destroy","bullets","data-glide-el","img","data-glide-dir","_","i","Draggable","resetDraggable","isDragging","trackMousePosition","x","pageX","y","pageY","startDragging","draggable","offsetLeft","offsetTop","startX","startY","window","addEventListener","removeEventListener","styles","position","left","top","onMouseDown","Circle","ThemeContext","createContext","UserContext","Button","theme","context","backgroundColor","contextType","toggleTheme","axios","create","baseURL","HomePage","apiClient","useData","path","initialValue","immediateLoading","useState","setData","setError","setFetching","useEffect","get","catch","err","to","PostItem","hasCommentsDisplayed","setCommentsDisplaying","user","PostsPage","UsersPage","users","Grid","columns","Column","width","Image","wrapped","ui","address","street","suite","city","AlbumsPage","album","AlbumPage","useParams","albumId","photos","status","perView","photo","url","rounded","NotFoundPage","UserPage","useRouteMatch","fluid","exact","withRouter","location","TransitionGroup","CSSTransition","pathname","includes","undefined","classNames","timeout","component","ms","res","addTodo","newTodo","payload","initialState","isLoading","items","completed","appReducer","combineReducers","todos","action","filter","todo","count","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","logger","connect","dispatch","ConnectedAddTodoForm","addNewTodo","addTodoAsync","setTitle","save","useCallback","Date","now","App","rootReducer","selectedSubreddit","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"uZAEqBA,E,2MAEjBC,MAAQ,CACJ,MAAS,GACTC,SAAS,G,EAkBbC,WAAa,WACT,EAAKC,SAAS,CAAEF,SAAS,K,mFAfzBG,KAAKC,a,yCAGUC,GACXA,EAAUC,QAAUH,KAAKI,MAAMD,OAC/BH,KAAKC,a,iCAKT,IAAMI,EAAQL,KAAKI,MAAMH,SAASD,KAAKI,MAAMD,OAC7CH,KAAKD,SAAS,CAAEM,Y,+BAOV,IAAD,EACyBL,KAAKI,MAAdE,GADhB,EACGL,SADH,+BAEsBD,KAAKJ,MAAxBS,EAFH,EAEGA,MAAOR,EAFV,EAEUA,QACf,OACI,yBAAKU,UAAU,mBACX,2CAAWD,EAAX,CAAiBE,OAAQR,KAAKF,cAC7BO,GAASR,GAAW,yBAAKU,UAAU,SAASF,Q,GAhCjBI,aCEtCC,EAAoB,SAAAP,GAAK,OAAKA,EAAsB,GAAd,aAEvBQ,E,YAiBjB,WAAYP,GAAQ,IAAD,uBACf,4CAAMA,KAUVQ,cAAgB,SAAAC,GAAM,IAAD,EACOA,EAAEC,OAAlBC,EADS,EACTA,KAAOZ,EADE,EACFA,MACf,EAAKJ,SAAL,eAAiBgB,EAAOZ,KAbT,EAenBa,kBAAoB,WAChB,EAAKZ,MAAMa,SAAS,EAAKrB,OACzB,EAAKsB,eAjBU,EAmBnBA,YAAc,WACV,EAAKnB,SAAS,CACVoB,MAAO,GACPC,KAAM,GACNC,MAAO,GACPC,SAAU,MAxBC,IAEPC,EAAYnB,EAAZmB,QAFO,OAGf,EAAK3B,MAAL,aACIuB,MAAO,GACPC,KAAM,GACNC,MAAO,GACPC,SAAU,IACPC,GARQ,E,0EA2BL,IAAD,EACgCvB,KAAKJ,MAAtCuB,EADC,EACDA,MAAOC,EADN,EACMA,KAAMC,EADZ,EACYA,MAAOC,EADnB,EACmBA,SAC5B,OAAOZ,EAAkBS,IACtBT,EAAkBU,IAClBV,EAAkBW,IAClBX,EAAkBY,K,+BAEf,IAAD,EACoCtB,KAAKJ,MAAtCuB,EADH,EACGA,MAAOC,EADV,EACUA,KAAMC,EADhB,EACgBA,MAAOC,EADvB,EACuBA,SACtBE,EAAWxB,KAAKyB,aACtB,OACI,4BACI,4BACI,kBAAC,EAAD,CAAgBxB,SAAUS,EAAmBU,KAAK,OAAOL,KAAK,QAAQZ,MAAOgB,EAAOO,SAAU1B,KAAKY,iBAEvG,4BACI,kBAAC,EAAD,CAAgBX,SAAUS,EAAmBU,KAAK,OAAOL,KAAK,OAAOZ,MAAOiB,EAAMM,SAAU1B,KAAKY,iBAErG,4BACI,kBAAC,EAAD,CAAgBX,SAAUS,EAAmBU,KAAK,OAAOL,KAAK,QAAQZ,MAAOkB,EAAOK,SAAU1B,KAAKY,iBAEvG,4BACI,kBAAC,EAAD,CAAgBX,SAAUS,EAAmBU,KAAK,OAAOL,KAAK,WAAWZ,MAAOmB,EAAUI,SAAU1B,KAAKY,iBAE7G,4BACI,4BAAQY,SAAUA,EAAUG,QAAS3B,KAAKgB,mBAA1C,gB,GArEwBP,aAAvBE,EAaViB,aAAe,CAClBL,QAAS,I,IChBIM,E,YAKjB,WAAYzB,GAAQ,IAAD,8BACf,4CAAMA,KALVR,MAAQ,CACJkC,UAAU,GAGK,EAQnBC,OAAS,SAAAC,GACL,EAAK5B,MAAM6B,cAAcD,GACzB,EAAKjC,SAAS,CAAE+B,UAAU,KAR1B,EAAKlC,MAAQ,CACTsC,WAAY9B,EAAM+B,QAHP,E,sEAcT,IAAD,SACgCnC,KAAKI,MAAlCmB,EADH,EACGA,QAASa,EADZ,EACYA,gBAEjB,OADqBpC,KAAKJ,MAAlBkC,SACa,kBAAC,EAAD,CAAgBb,SAAUjB,KAAK+B,OAAQR,QAASA,IAEjE,4BACA,4BAAKA,EAAQJ,OACb,4BAAKI,EAAQH,MACb,4BAAKG,EAAQF,OACb,4BAAKE,EAAQD,UACb,4BACI,4BAAQK,QAAS,kBAAM,EAAK5B,SAAS,CAAE+B,UAAU,MAAjD,QACA,4BAAQH,QAAS,kBAAMS,EAAgBb,EAAQc,MAA/C,gB,GA/BwB5B,aCCzB,SAAS6B,EAAT,GAMX,IALAC,EAKD,EALCA,SACAH,EAID,EAJCA,gBACAI,EAGD,EAHCA,aACAP,EAED,EAFCA,cACAQ,EACD,EADCA,MAEA,OACI,2BAAOlC,UAAU,iBACb,+BACI,4BACI,wBAAImC,MAAO,CAAED,UAAb,oDAGA,kDAGA,wDAGA,0EAGA,+BAIR,+BACKF,EAASI,KAAI,SAAApB,GAAO,OACjB,kBAAC,EAAD,CACIa,gBAAiBA,EACjBH,cAAeA,EACfW,IAAKrB,EAAQc,GACbd,QAASA,OAGjB,kBAAC,EAAD,CAAgBN,SAAUuB,MAe1CF,EAAYV,aAAe,CACvBa,MAAO,OCtDI,MACI,WACX,OAAO,IAAII,SAAQ,SAACC,GAChBC,YAAW,WACPD,EAAQ,CACJ,CACCT,GAAI,IACJlB,MAAO,qBACPC,KAAM,SACNC,MAAO,OACPC,SAAU,MAEX,CACCe,GAAI,IACJlB,MAAO,WACPC,KAAM,SACNC,MAAO,OACPC,SAAU,MAEX,CACCe,GAAI,IACJlB,MAAO,uCACPC,KAAM,UACNC,MAAO,MACPC,SAAU,SAGhB,SC5BM0B,E,2MACjBpD,MAAQ,CACJqD,UAAU,G,iFAQI5C,EAAO6C,GAErBC,QAAQC,IAAI/C,K,+BAIZ,OAAIL,KAAKJ,MAAMqD,SAAiB,8HAAwB,4BAAQtB,QAAS3B,KAAKI,MAAM0C,SAA5B,eAGjD9C,KAAKI,MAAMiD,Y,gDAfUhD,GAG5B,OADA8C,QAAQC,IAAI/C,GACL,CAAE4C,UAAU,O,GAPgBxC,aCAtB6C,GCGc7C,YCHDA,Y,YFC9B,WAAYL,GAAQ,IAAD,8BACf,4CAAMA,KACDmD,SAAWC,IAAMC,YAFP,E,4EAKfzD,KAAKuD,SAASG,QAAQC,U,+BAGtB,OACI,6BACA,2BAAOC,IAAK5D,KAAKuD,SAAUnC,KAAK,SAChC,2E,GAZ4BX,cGCIA,Y,mECCvBoD,E,2MAIjBjE,MAAQ,CACJkE,SAAU,GACVC,SAAS,G,mFAGL/D,KAAKI,MAAM4D,QACfhE,KAAKiE,kB,sCAEQ,IAAD,OACZjE,KAAKD,SAAS,CAAEgE,SAAS,IACzBG,MAAM,8CAAD,OAA+ClE,KAAKI,MAAM4D,OAA1D,cACAG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OAAI,EAAKvE,SAAS,CAAE+D,SAAUQ,EAAMP,SAAS,S,+BAErD,IACED,EAAa9D,KAAKJ,MAAlBkE,SACR,OACI,kBAACS,EAAA,EAAQC,MAAT,KACMV,EAASnB,KAAI,SAAA8B,GAAO,OACrB,kBAACF,EAAA,EAAD,CAAS3B,IAAK6B,EAAQpC,IACnB,kBAACkC,EAAA,EAAQG,OAAT,CAAgBC,IAAI,kGACpB,kBAACJ,EAAA,EAAQK,QAAT,KACI,kBAACL,EAAA,EAAQM,OAAT,CAAgBC,GAAG,KAAKL,EAAQM,OAChC,kBAACR,EAAA,EAAQS,SAAT,KACI,6BAAMP,EAAQ1D,OAElB,kBAACwD,EAAA,EAAQU,KAAT,KAAenB,EAASoB,MACxB,kBAACX,EAAA,EAAQY,QAAT,KACA,kBAACZ,EAAA,EAAQa,OAAT,yB,GAhCc3E,aCCjB4E,E,2MASjBzF,MAAQ,CACJ0F,cAAc,G,EAElBC,eAAiB,WACb,EAAKnF,MAAMoF,YAAY,EAAKpF,MAAMqF,MAClC,EAAK1F,SAAS,CAAEuF,cAAc,K,wEAExB,IACEA,EAAiBtF,KAAKJ,MAAtB0F,aADH,EAEyBtF,KAAKI,MAA3BoF,EAFH,EAEGA,YAAaC,EAFhB,EAEgBA,KACrB,OACI,kBAACC,EAAA,EAAKlB,MAAN,KACI,kBAACkB,EAAA,EAAD,KACI,kBAACA,EAAA,EAAKd,QAAN,KACI,kBAACc,EAAA,EAAKC,OAAN,CAAahE,QAAS,kBAAM6D,EAAYC,IAAOX,GAAG,KAAKW,EAAKtE,OAC5D,kBAACuE,EAAA,EAAKE,KAAN,oBACA,kBAACF,EAAA,EAAKG,YAAN,KACKJ,EAAKP,MAEV,kBAACQ,EAAA,EAAKI,MAAN,KACI,uBAAGnE,QAAS3B,KAAKuF,gBAAjB,aAEHD,GACD,kBAACI,EAAA,EAAKI,MAAN,KACI,kBAAC,EAAD,CAAU9B,OAAQyB,EAAKpD,a,GAjCjB5B,a,ICDIA,ECGhCsF,E,iLAMQ,IAAD,EACuC/F,KAAKI,MAAzC4F,EADH,EACGA,aAAcC,EADjB,EACiBA,MAAOC,EADxB,EACwBA,WAC7B,OACI,kBAACC,EAAA,EAAD,KACI,6BACI,kBAACC,EAAA,EAAD,CAAQC,OAAQH,EAAYI,UAAQ,GAChC,kBAACC,EAAA,EAAD,CAAQD,UAAQ,GAAhB,YAEHL,EAAMtD,KAAI,SAAA8C,GAAI,OAAI,kBAAC,EAAD,CAAM7C,IAAK6C,EAAKpD,GAAIoD,KAAMA,EAAMD,YAAaQ,a,GAd7DvF,aAqBR+F,GDxBuB/F,ECwBTsF,EDxBoB,2MAEzCnG,MAAQ,CACJqG,MAAO,GACPlC,SAAS,GAJ4B,mFAOrC/D,KAAKyG,eAPgC,mCAS3B,IAAD,OACTzG,KAAKD,SAAS,CAAEgE,SAAS,IACzBG,MAAM,8CACDC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OAAI,EAAKvE,SAAS,CAAEkG,MAAO3B,EAAMP,SAAS,SAbnB,+BAe/B,IAAD,EACsB/D,KAAKJ,MAAxBqG,EADH,EACGA,MAAOlC,EADV,EACUA,QACf,OAAO,kBAACtD,EAAD,iBAAeT,KAAKI,MAApB,CAA2B6F,MAAOA,EAAOC,WAAYnC,SAjBvB,GACjBP,IAAM/C,Y,mCEDjBiG,E,2MAOjB9G,MAAQ,CACJ+G,WAAY,KACZC,OAAQ,GACR7C,SAAS,G,mFAGL/D,KAAKI,MAAMyG,WACX7G,KAAK8G,kBACL9G,KAAK+G,iB,yCAGM7G,GACXF,KAAKI,MAAMyG,WAAa3G,EAAU2G,WAClC7G,KAAK8G,kBACL9G,KAAK+G,iB,wCAGM,IAAD,OACd/G,KAAKD,SAAS,CAAEgE,SAAS,IACzBG,MAAM,8CAAD,OAA+ClE,KAAKI,MAAMyG,WAC1D1C,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OAAI,EAAKvE,SAAS,CAAE4G,WAAYrC,EAAMP,SAAS,S,oCAElD,IAAD,OACVG,MAAM,8CAAD,OAA+ClE,KAAKI,MAAMyG,SAA1D,YACA1C,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OAAI,EAAKvE,SAAS,CAAE6G,OAAQtC,S,+BAEpC,IAAD,EACmCtE,KAAKJ,MAArCmE,EADH,EACGA,QAAS6C,EADZ,EACYA,OAAQD,EADpB,EACoBA,WACzB,OAAKA,EAID,kBAACK,EAAA,EAAD,CAAMzG,UAAU,iBAChB,kBAAC6F,EAAA,EAAD,CAAQE,UAAQ,EAACD,OAAQtC,GAAS,kBAACwC,EAAA,EAAD,CAAQD,UAAQ,GAAhB,eAClC,kBAACU,EAAA,EAAKpC,QAAN,KACE,kBAACoC,EAAA,EAAKrB,OAAN,KAAcgB,EAAW5F,MACzB,kBAACiG,EAAA,EAAKpB,KAAN,KACE,0BAAMrF,UAAU,QAAhB,aAAkCoG,EAAWM,WAE/C,kBAACD,EAAA,EAAKpB,KAAN,KACE,0BAAMrF,UAAU,SAAhB,UAAgCoG,EAAW5B,QAE7C,kBAACiC,EAAA,EAAKnB,YAAN,KACGc,EAAW5F,KADd,aAC6B,gCAAS4F,EAAWO,QAAQnG,OAEzD,kBAACiG,EAAA,EAAKpB,KAAN,KACE,0BAAMrF,UAAU,SAAhB,UAAgCoG,EAAWQ,SAG/C,kBAACH,EAAA,EAAKpC,QAAN,CAAcwC,OAAK,GACjB,2BACE,kBAACC,EAAA,EAAD,CAAMtG,KAAK,SACV6F,EAAOU,OAFV,YAKF,kBAACN,EAAA,EAAKpC,QAAN,KACI,kBAAC2C,EAAA,EAAD,KACMX,EAAOjE,KAAI,SAAA6E,GAAC,OAAI,kBAACD,EAAA,EAAK7B,KAAN,CAAW9C,IAAK4E,EAAEnF,IAAKmF,EAAErG,aA5B5C,kBAACsG,EAAA,EAAD,4B,GAtCqBhH,aAAnBiG,EAIV9E,aAAe,CACpBiF,SAAU,MCHkBpG,Y,aCDbiH,G,0BAEjB,WAAYtH,GAAQ,IAAD,8BACf,4CAAMA,KACDuH,OAASnE,IAAMC,YACpB,EAAKmE,OAAS,KAHC,E,iFAWf5H,KAAK4H,OAAS,IAAIC,IAAQ7H,KAAK2H,OAAOjE,QAAS1D,KAAKI,MAAM0H,SAASC,U,yCAGpD7H,GACZF,KAAKI,MAAM0H,UAAY5H,EAAU4H,SAChC9H,KAAK4H,OAAOI,OAAOhI,KAAKI,MAAM0H,W,6CAKlC9H,KAAK4H,OAAOK,Y,+BAGN,IAAD,EACyBjI,KAAKI,MAA3BiD,EADH,EACGA,SAAU6E,EADb,EACaA,QAClB,OACI,yBAAKtE,IAAK5D,KAAK2H,OAAQpH,UAAU,SAC7B,yBAAKA,UAAU,eAAe4H,gBAAc,SACxC,wBAAI5H,UAAU,iBACT8C,EAASV,KAAI,SAAAyF,GAAG,OAAK,wBAAI7H,UAAU,gBAAgB6H,QAG5D,yBAAK7H,UAAU,gBAAgB4H,gBAAc,YACzC,4BAAQ5H,UAAU,kCAAkC8H,iBAAe,KAAnE,QACA,4BAAQ9H,UAAU,mCAAmC8H,iBAAe,KAApE,SAEHH,GACD,yBAAK3H,UAAU,iBAAiB4H,gBAAc,iBAC7C9E,EAASV,KAAI,SAAC2F,EAAGC,GAAJ,OAAU,4BAAQhI,UAAU,gBAAgB8H,iBAAA,WAAoBE,c,GAzC3D9H,cAAdiH,EAQV9F,aAAe,CAClBsG,SAAS,G,ICZIM,E,YACjB,WAAYpI,GAAQ,IAAD,8BACf,4CAAMA,KAkBVqI,eAAiB,WACb,EAAK1I,SAAS,CAAE2I,YAAY,KApBb,EAsBnBC,mBAAqB,SAAA9H,GACb,EAAKjB,MAAM8I,YACX,EAAK3I,SAAS,CACV6I,EAAG/H,EAAEgI,MACLC,EAAGjI,EAAEkI,SA1BE,EA8BnBC,cAAgB,SAAAnI,GAAM,IAAD,EACiB,EAAKoI,UAAUvF,QAAzCwF,EADS,EACTA,WAAYC,EADH,EACGA,UACpB,EAAKpJ,SAAS,CACV2I,YAAY,EACZE,EAAG/H,EAAEgI,MACLC,EAAGjI,EAAEkI,MACLK,OAAQvI,EAAEgI,MAAQK,EAClBG,OAAQxI,EAAEkI,MAAQI,KAnCtB,EAAKvJ,MAAQ,CACT8I,YAAY,EACZE,EAAG,EACHE,EAAG,EACHM,OAAQ,EACRC,OAAQ,GAEZ,EAAKJ,UAAYzF,IAAMC,YATR,E,iFAYf6F,OAAOC,iBAAiB,UAAWvJ,KAAKyI,gBACxCa,OAAOC,iBAAiB,YAAavJ,KAAK2I,sB,6CAG1CW,OAAOE,oBAAoB,UAAWxJ,KAAKyI,gBAC3Ca,OAAOE,oBAAoB,YAAaxJ,KAAK2I,sB,+BAuBvC,IAAD,EAC4B3I,KAAKJ,MAA9BgJ,EADH,EACGA,EAAGE,EADN,EACMA,EACLW,EAAS,CACXC,SAAU,WACVC,KAAMf,EAJL,EACSQ,OAIVQ,IAAKd,EALJ,EACiBO,QAMtB,OACI,yBACI3G,MAAO+G,EACPlJ,UAAU,YACVsJ,YAAa7J,KAAKgJ,cAClBpF,IAAK5D,KAAKiJ,WAETjJ,KAAKI,MAAMiD,c,GAvDW5C,aCAxB,SAASqJ,IACpB,OACI,yBAAKvJ,UAAU,WCDoBE,YCENA,Y,ICDtBsJ,EAFMvG,IAAMwG,cAAc,SCE1BC,EAFKzG,IAAMwG,cAAc,mBCGnBE,G,wLAGb,IAAMC,EAAQnK,KAAKoK,QACnB,OACI,yBAAK7J,UAAU,MAAMmC,MAAO,CAAED,MAAiB,UAAV0H,EAAoB,QAAU,QAASE,gBAA2B,UAAVF,EAAoB,YAAc,UAA/H,gB,GALwB1J,cAAfyJ,EACVI,YAAcP,E,ICFJ9E,E,iLAGb,IAAMkF,EAAQnK,KAAKoK,QACnB,OACI,yBAAK7J,UAAW4J,GAAhB,2OAEI,kBAAC,EAAD,W,GAPkB1J,aAAbwE,EACVqF,YAAcP,ECEYtJ,Y,WCJd+C,IAAM/C,U,OCDR+C,IAAMwG,cAAc,CACvCG,MAAO,QACPI,YAAa,e,YAFf,I,iBCAkBC,IAAMC,OAAO,CAC3BC,QAAS,0C,sHCQEC,OARd,WACG,OACI,kBAACxE,EAAA,EAAD,CAAW5F,UAAU,QACjB,kBAACoF,EAAA,EAAD,gCCAGiF,GAJGJ,IAAMC,OAAO,CAC3BC,QAAS,0CCAE,SAASG,GAAQC,EAAMC,GAAwC,IAA1BC,IAAyB,2DACjDC,mBAASF,GADwC,mBAClEzG,EADkE,KAC5D4G,EAD4D,OAE/CD,mBAAS,MAFsC,mBAElE5K,EAFkE,KAE3D8K,EAF2D,OAGvCF,oBAAS,GAH8B,mBAGlE/E,EAHkE,KAGtDkF,EAHsD,KAoBzE,OAfAC,qBAAU,WACFL,IACAI,GAAY,GACZR,GAAUU,IAAIR,GACT3G,MAAK,SAAAC,GACFgH,GAAY,GACZF,EAAQ9G,EAASE,SAEpBiH,OAAM,SAAAC,GACHJ,GAAY,GACZD,EAASK,EAAIpH,gBAG1B,CAAC0G,EAAME,IAEH,CAAC1G,EAAM4B,EAAY7F,GClBf,SAASwD,GAAT,GAA+B,IAAXG,EAAU,EAAVA,OAAU,EACV6G,GAAQ,UAAD,OAAW7G,EAAX,aAA8B,IAD3B,mBAClCF,EADkC,KAEzC,OAFyC,KAElB,kBAACuD,EAAA,EAAD,CAAMtG,KAAK,WAAWgD,SAAO,IAEhD,kBAACQ,EAAA,EAAQC,MAAT,KACUV,EAASnB,KAAI,SAAA8B,GAAO,OACrB,kBAACF,EAAA,EAAD,CAAS3B,IAAK6B,EAAQpC,IACnB,kBAACkC,EAAA,EAAQG,OAAT,CAAgBC,IAAI,kGACpB,kBAACJ,EAAA,EAAQK,QAAT,KACI,kBAACL,EAAA,EAAQM,OAAT,KACI,kBAAC,KAAD,CAAM4G,GAAE,iBAAYhH,EAAQM,QAAUN,EAAQM,QAElD,kBAACR,EAAA,EAAQU,KAAT,KAAeR,EAAQS,YCVhC,SAASwG,GAAT,GAA6B,IAATjG,EAAQ,EAARA,KAAQ,EACewF,oBAAS,GADxB,mBAChCU,EADgC,KACVC,EADU,OAEtBf,GAAQ,UAAD,OAAWpF,EAAKtD,QAAU,KAAMwJ,GAAhDE,EAF+B,oBAIvC,OACI,kBAACnG,EAAA,EAAD,KACI,kBAACA,EAAA,EAAKd,QAAN,KACI,kBAACc,EAAA,EAAKC,OAAN,CAAab,GAAG,KAAKW,EAAKtE,OAC1B,kBAACuE,EAAA,EAAKG,YAAN,KACKJ,EAAKP,MAEV,kBAACQ,EAAA,EAAKI,MAAN,KACI,kBAAC,KAAD,CAAM2F,GAAE,iBAAYhG,EAAKtD,SAAzB,SAA0C0J,EAAOA,EAAK9K,KAAO,WAEjE,kBAAC2E,EAAA,EAAKI,MAAN,CAAYnE,QAAS,kBAAMiK,GAAuBD,KAAlD,YAGCA,GACD,kBAACjG,EAAA,EAAKI,MAAN,KACI,kBAAC,GAAD,CAAU9B,OAAQyB,EAAKpD,QCrB5B,SAASyJ,KAAa,IAAD,EAEJjB,GAAQ,SAAU,IAFd,mBAEzB5E,EAFyB,KAElBC,EAFkB,KAIhC,OACI,kBAACC,EAAA,EAAD,CAAW5F,UAAU,QACjB,kBAAC6F,EAAA,EAAD,CAAQC,OAAQH,EAAYI,UAAQ,GAChC,kBAACC,EAAA,EAAD,OAEJ,kBAACb,EAAA,EAAKlB,MAAN,CAAYjE,UAAU,SACjB0F,EAAMtD,KAAI,SAAA8C,GAAI,OAAI,kBAACiG,GAAD,CAAU9I,IAAK6C,EAAKpD,GAAIoD,KAAMA,S,cCVlD,SAASsG,KAAa,IAAD,EACJlB,GAAQ,SAAU,IADd,mBACzBmB,EADyB,KAClB9F,EADkB,KAGhC,OACI,kBAACC,EAAA,EAAD,CAAW5F,UAAU,QACpB,kBAAC6F,EAAA,EAAD,CAAQC,OAAQH,EAAYI,UAAQ,GAAC,kBAACC,EAAA,EAAD,OACtC,kBAAC0F,EAAA,EAAD,CAAM1L,UAAU,QAAQ2L,QAAS,GAChCF,EAAMrJ,KAAI,SAAAkJ,GAAI,OACX,kBAACI,EAAA,EAAKE,OAAN,KACI,kBAACnF,EAAA,EAAD,CAAMtE,MAAO,CAAE0J,MAAO,SAClB,kBAACC,GAAA,EAAD,CAAO1H,IAAI,gEAAgE2H,SAAO,EAACC,IAAI,IACvF,kBAACvF,EAAA,EAAKpC,QAAN,KACA,kBAACoC,EAAA,EAAKrB,OAAN,KACI,kBAAC,KAAD,CAAM8F,GAAE,iBAAYI,EAAKxJ,IAAM9B,UAAU,SAASsL,EAAK9K,OAE3D,kBAACiG,EAAA,EAAKpB,KAAN,KACI,kBAAC,KAAD,CAAM6F,GAAE,iBAAYI,EAAKxJ,IAAM9B,UAAU,SAASsL,EAAK9G,QAE3D,kBAACiC,EAAA,EAAKnB,YAAN,KACCgG,EAAKW,QAAQC,OADd,IACuBZ,EAAKW,QAAQE,MADpC,KAC6Cb,EAAKW,QAAQG,OAG1D,kBAAC3F,EAAA,EAAKpC,QAAN,aCtBL,SAASgI,KAAc,IAAD,EACJ/B,GAAQ,UAAW,IADf,mBAC1BjE,EAD0B,KAClBV,EADkB,KAEjC,OACI,kBAACC,EAAA,EAAD,CAAW5F,UAAU,QACjB,kBAAC6F,EAAA,EAAD,CAAQC,OAAQH,EAAYI,UAAQ,GAChC,kBAACC,EAAA,EAAD,OAEJ,kBAACb,EAAA,EAAKlB,MAAN,CAAYjE,UAAU,SACjBqG,EAAOjE,KAAI,SAAAkK,GAAK,OACb,kBAACnH,EAAA,EAAD,KACA,kBAACA,EAAA,EAAKd,QAAN,KACI,kBAACc,EAAA,EAAKC,OAAN,KAAckH,EAAM1L,OACpB,kBAACuE,EAAA,EAAKI,MAAN,KACI,kBAAC,KAAD,CAAM2F,GAAE,iBAAYoB,EAAM1K,OAAlB,mBAAmC0K,EAAMxK,KAAjD,sBCZb,SAASyK,KAAa,IAAD,EACJC,eAApB5K,EADwB,EACxBA,OAAQ6K,EADgB,EAChBA,QADgB,EAETnC,GAAQ,WAAD,OAAYmC,GAAW,IAFrB,mBAEzBH,EAFyB,KAEhBrB,EAFgB,OAGFX,GAAQ,WAAD,OAAYmC,EAAZ,WAA8B,IAHnC,mBAGzBC,EAHyB,KAGjB/G,EAHiB,KAKhC,OAAIsF,GAAsB,MAAfA,EAAI0B,QACX/J,QAAQC,IAAIoI,GACL,kBAAC,KAAD,CAAUC,GAAE,iBAAYtJ,MAG/B,kBAACgE,EAAA,EAAD,CAAW5F,UAAU,QACjB,kBAAC6F,EAAA,EAAD,CAAQE,UAAQ,EAACD,OAAQH,GAAY,kBAACK,EAAA,EAAD,CAAQF,QAAM,KACnD,kBAACV,EAAA,EAAD,KAASkH,EAAM1L,OACd8L,EAAO3F,OAAS,GACjB,kBAAC,EAAD,CAAOQ,QAAS,CAAEqF,QAAS,GAAKjF,SAAS,GACpC+E,EAAOtK,KAAI,SAAAyK,GAAK,OAAI,kBAACf,GAAA,EAAD,CAAO1H,IAAKyI,EAAMC,IAAKC,SAAO,SClBpD,SAASC,KACpB,OACI,kBAACpH,EAAA,EAAD,CAAW5F,UAAU,QACjB,kBAACoF,EAAA,EAAD,4BCCG,SAAS6H,KAAY,IACxBrL,EAAW4K,eAAX5K,OADuB,EAEXsL,eAAd3C,EAFyB,EAEzBA,KAAMuC,EAFmB,EAEnBA,IAFmB,EAIJxC,GAAQ,UAAD,OAAW1I,GAAU,MAJxB,mBAIxB0J,EAJwB,KAIlB3F,EAJkB,OAKZ2E,GAAQ,UAAD,OAAW1I,EAAX,WAA4B,IAA9CyE,EALuB,oBAO/B,OACI,kBAACT,EAAA,EAAD,CAAW5F,UAAU,QACjB,kBAAC6F,EAAA,EAAD,CAAQC,OAAQH,IAAe2F,EAAMvF,UAAQ,GAAC,kBAACC,EAAA,EAAD,OAC7CsF,GACD,kBAACI,EAAA,EAAD,KACI,kBAACA,EAAA,EAAKE,OAAN,CAAaC,MAAO,GAChB,kBAACpF,EAAA,EAAD,CAAM0G,OAAK,GACP,kBAACrB,GAAA,EAAD,CAAO1H,IAAI,gEAAgE2H,SAAO,EAACC,IAAI,IACvF,kBAACvF,EAAA,EAAKpC,QAAN,KACA,kBAACoC,EAAA,EAAKrB,OAAN,KAAckG,EAAK9K,MACnB,kBAACiG,EAAA,EAAKpB,KAAN,KACI,0BAAMrF,UAAU,SAASsL,EAAK9G,QAElC,kBAACiC,EAAA,EAAKnB,YAAN,KACCgG,EAAKW,QAAQC,OADd,IACuBZ,EAAKW,QAAQE,MADpC,KAC6Cb,EAAKW,QAAQG,OAG1D,kBAAC3F,EAAA,EAAKpC,QAAN,CAAcwC,OAAK,GACnB,2BACI,kBAACC,EAAA,EAAD,CAAMtG,KAAK,SACV6F,EAAOU,OAFZ,YAKA,kBAACN,EAAA,EAAKpC,QAAN,KACA,kBAAC2C,EAAA,EAAD,KACCX,EAAOjE,KAAI,SAAAkK,GAAK,OACb,kBAACtF,EAAA,EAAK7B,KAAN,CAAW9C,IAAKiK,EAAMxK,IAClB,kBAAC,KAAD,CAAMoJ,GAAE,UAAK4B,EAAL,mBAAmBR,EAAMxK,KAAOwK,EAAM1L,eAO9D,kBAAC8K,EAAA,EAAKE,OAAN,CAAcC,MAAO,IACjB,kBAAC,KAAD,KACI,kBAAC,KAAD,CAAOuB,OAAK,EAAC7C,KAAMA,GACf,kBAACnF,EAAA,EAAD,CAAQb,GAAG,MAAX,oBAEJ,kBAAC,KAAD,CAAOgG,KAAI,UAAKA,EAAL,oBAA6B6C,OAAK,GACzC,kBAACb,GAAD,OAEJ,kBAAC,KAAD,CAAOhC,KAAK,KACR,kBAACyC,GAAD,WC5CLK,cAAW,gBAAGC,EAAH,EAAGA,SAAH,OAC9B,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEnL,IAAKiL,EAASG,SAASC,SAAS,gBAAaC,EAAYL,EAASjL,IAClEuL,WAAW,OACXC,QAAS,KAET,kBAAC,KAAD,CAAQP,SAAUA,GACd,kBAAC,KAAD,CAAO/C,KAAK,IAAI6C,OAAK,EAACU,UAAW1D,KACjC,kBAAC,KAAD,CAAOG,KAAK,SAAS6C,OAAK,EAACU,UAAWvC,KACtC,kBAAC,KAAD,CAAOhB,KAAK,SAAS6C,OAAK,EAACU,UAAWtC,KACtC,kBAAC,KAAD,CAAOjB,KAAK,iBAAiBuD,UAAWb,KACxC,kBAAC,KAAD,CAAO1C,KAAK,UAAU6C,OAAK,EAACU,UAAWzB,KACvC,kBAAC,KAAD,CAAO9B,KAAK,IAAIuD,UAAWd,W,oFCrBvC,SAASa,GAAQE,GACb,OAAO,IAAIzL,SAAQ,SAAC0L,GAChBxL,WAAWwL,EAAKD,MAIxB,IAAME,GAAU,SAAAC,GACZ,MAAO,CACHrN,KAbwB,mBAcxBsN,QAASD,ICZXE,GAAe,CACjBC,WAAW,EACXC,MAAO,CACH,CACIxM,GAAI,EACJlB,MAAO,eACP2N,WAAW,GAEf,CACIzM,GAAI,EACJlB,MAAO,gBACP2N,WAAW,KCRvB,IAMeC,GANIC,aAAgB,CAC/BC,MDcW,WAAoD,IAA/BrP,EAA8B,uDAAtB+O,GAAcO,EAAQ,uCAC9D,OAAOA,EAAO9N,MACV,IDtBwB,mBCuBpB,OAAO,eACAxB,EADP,CAEIiP,MAAM,CAAEK,EAAOR,SAAV,mBAAsB9O,EAAMiP,QACjCD,WAAW,IAEnB,ID1BmB,cC2Bf,OAAO,eACAhP,EADP,CAEIiP,MAAOjP,EAAMiP,MAAMM,QAAO,SAAAC,GAAI,OAAIA,EAAK/M,KAAO6M,EAAOR,aAE7D,ID9BoB,eC+BhB,OAAO,eACA9O,EADP,CAEIiP,MAAOjP,EAAMiP,MAAMlM,KAAI,SAAAyM,GAAI,OAAIA,EAAK/M,KAAO6M,EAAOR,QAAQrM,GAA3B,eAAqC+M,EAArC,GAA8CF,EAAOR,SAAYU,OAExG,IDrCwB,mBCsCpB,OAAO,eACAxP,EADP,CAEIgP,WAAW,IAEnB,QAAS,OAAOhP,ICpCpByP,MCLW,WAA0C,IAApBzP,EAAmB,uDAAX,EAAGsP,EAAQ,uCACpD,OAAOA,EAAO9N,MACV,ICJkB,aDKd,OAAOxB,EAAQ,EACnB,ICLiB,YDMb,OAAOA,EAAQ,EACnB,QAAS,OAAOA,MEHlB0P,GAAmBhG,OAAOiG,sCAAwCC,KAOzDC,GALDC,aACVX,GACAO,GAAiBK,aAAgBC,KAAOC,QCM5C,IAMeC,iBANS,SAAAlQ,GAAK,MAAK,CAC9BqP,MAAOrP,EAAMqP,MAAMJ,MACnBD,UAAWhP,EAAMqP,MAAML,aAIZkB,EAjBf,YAAmD,IAA/Bb,EAA8B,EAA9BA,MAAOL,EAAuB,EAAvBA,UAAWmB,EAAY,EAAZA,SAClC,OACI,6BACKnB,GAAa,0CACbK,EAAMtM,KAAI,SAAAyM,GAAI,OACX,yBAAKxM,IAAKwM,EAAK/M,IAAK+M,EAAKjO,MAAzB,aAAyC,0BAAMQ,QAAS,kBAAMoO,ENkBnE,CACH3O,KA1BmB,cA2BnBsN,QMpB0FU,EAAK/M,OAA9C,aCezD,IAOe2N,GAFcF,aAAQ,MALV,SAAAC,GAAQ,MAAK,CACpCE,WAAY,SAAAxB,GAAO,OAAIsB,EPPC,SAAAtB,GAAO,gDAAI,WAAMsB,GAAN,UAAAvI,EAAA,6DACnCuI,EAAS,CACL3O,KAnBwB,qBAiBO,SAI7BgN,GAAQ,KAJqB,OAKnC2B,EAASvB,GAAQC,IALkB,2CAAJ,sDOOCyB,CAAazB,QAIpBqB,EAzB7B,YAAsC,IAAfG,EAAc,EAAdA,WAAc,EACPhF,mBAAS,IADF,mBAC1B9J,EAD0B,KACnBgP,EADmB,KAG3BC,EAAOC,uBAAY,WACrBJ,EAAW,CACP5N,GAAIiO,KAAKC,MACTpP,QACA2N,WAAW,IAEfqB,EAAS,MACV,CAAChP,EAAO8O,IAEX,OACI,6BACI,2BAAO9P,MAAOgB,EAAOO,SAAU,SAAAb,GAAC,OAAIsP,EAAStP,EAAEC,OAAOX,QAAQiB,KAAK,SACnE,4BAAQO,QAASyO,GAAjB,gBCZG,SAASI,KACpB,OACI,kBAAC,KAAD,CAAUf,MAAOA,IACb,kBAAC,GAAD,MACA,kBAAC,GAAD,OC+BZ,IAKegB,GALKzB,aAAgB,CAChC0B,kBAvCJ,WAA8D,IAA5B9Q,EAA2B,uDAAnB,UAAWsP,EAAQ,uCACzD,OAAOA,EAAO9N,MACV,ICDuB,kBDEnB,OAAO8N,EAAOR,QAClB,QACI,OAAO9O,IAmCfqG,MA/BJ,WAIY,IAJUrG,EAIX,uDAJmB,CAC1BgP,WAAW,EACXC,MAAO,GACPxO,MAAO,MACR6O,EAAQ,uCACP,OAAOA,EAAO9N,MACV,ICjB2B,sBDkBvB,OAAO,eACAxB,EADP,CAEIS,MAAO,KACPuO,WAAW,IAEnB,ICtB2B,sBDuBvB,OAAO,eACAhP,EADP,CAEIgP,WAAW,EACXC,MAAOK,EAAOR,UAEtB,IC3ByB,oBD4BrB,MAAO,CACHE,WAAW,EACXC,MAAO,GACPxO,MAAO6O,EAAOR,SAEtB,QAAS,OAAO9O,MEjClB0P,GAAmBhG,OAAOiG,sCAAwCC,KAE1DE,aACVe,GACAnB,GACIK,aAAgBC,QCwBTY,OARf,WACE,OACE,yBAAKjQ,UAAU,OACX,kBAAC,GAAD,QChBYoQ,QACW,cAA7BrH,OAAOuE,SAAS+C,UAEe,UAA7BtH,OAAOuE,SAAS+C,UAEhBtH,OAAOuE,SAAS+C,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,GAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBjN,MAAK,SAAAkN,GACJA,EAAaC,gBAEd/F,OAAM,SAAAlL,GACL8C,QAAQ9C,MAAMA,EAAMkR,c","file":"static/js/main.829470b9.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nexport default class ValidatedInput extends Component {\n\n    state = {\n        'error': '',\n        touched: false\n    }\n\n    componentDidMount() {\n        this.validate();\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.value !== this.props.value) {\n            this.validate()\n        }\n    }\n\n    validate() {\n        const error = this.props.validate(this.props.value)\n        this.setState({ error })\n    }\n\n    touchInput = () => {\n        this.setState({ touched: true });\n    }\n\n    render() {\n        const { validate, ...rest } = this.props;\n        const { error, touched } = this.state;\n        return (\n            <div className='validated-input'>\n                <input {...rest} onBlur={this.touchInput} />\n                {error && touched && <div className='error'>{error}</div> }\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types';\nimport ValidatedInput from './ValidatedInput';\n\nconst requiredValidator = value => !value ? 'Required!' : '';\n\nexport default class ProductFormRow extends Component {\n\n    static propTypes = {\n        onSubmit: PropTypes.func.isRequired,\n        product: PropTypes.shape({\n            id: PropTypes.string,\n            title: PropTypes.string,\n            price: PropTypes.string,\n            quantity: PropTypes.string,\n            type: PropTypes.string\n        }).isRequired\n    }\n\n    static defaultProps = {\n        product: {}\n    }\n\n    constructor(props) {\n        super(props);\n        const { product } = props;\n        this.state = {\n            title: '',\n            type: '',\n            price: '',\n            quantity: '',\n            ...product\n        }\n    }\n    onChangeField = e => {\n        const { name , value} = e.target\n        this.setState({ [name]: value })\n    }\n    submitProductForm = () => {\n        this.props.onSubmit(this.state);\n        this.resetFields();\n    }\n    resetFields = () => {\n        this.setState({\n            title: '',\n            type: '',\n            price: '',\n            quantity: '',\n        })\n    }\n    isDisabled() {\n        const { title, type, price, quantity } = this.state;\n        return requiredValidator(title)\n        && requiredValidator(type)\n        && requiredValidator(price)\n        && requiredValidator(quantity)\n    }\n    render() {\n        const { title, type, price, quantity } = this.state;\n        const disabled = this.isDisabled()\n        return (\n            <tr>\n                <td>\n                    <ValidatedInput validate={requiredValidator} type=\"text\" name='title' value={title} onChange={this.onChangeField}/>\n                </td>\n                <td>\n                    <ValidatedInput validate={requiredValidator} type=\"text\" name='type' value={type} onChange={this.onChangeField}/>\n                </td>\n                <td>\n                    <ValidatedInput validate={requiredValidator} type=\"text\" name='price' value={price} onChange={this.onChangeField}/>\n                </td>\n                <td>\n                    <ValidatedInput validate={requiredValidator} type=\"text\" name='quantity' value={quantity} onChange={this.onChangeField}/>\n                </td>\n                <td>\n                    <button disabled={disabled} onClick={this.submitProductForm}>Submit</button>\n                </td>\n            </tr>\n        )\n    }\n}\n\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport ProductFormRow from './ProductFormRow';\n\nexport default class ProductRow extends Component {\n    state = {\n        editMode: false\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = { \n            prevUserId: props.userId\n        }\n    }\n\n\n    onEdit = updatedProduct => {\n        this.props.onEditProduct(updatedProduct)\n        this.setState({ editMode: false });\n    }\n\n\n    render() {\n        const { product, onRemoveProduct } = this.props;\n        const { editMode } = this.state;\n        if (editMode) return <ProductFormRow onSubmit={this.onEdit} product={product} />\n        return (\n            <tr>\n            <td>{product.title}</td>\n            <td>{product.type}</td>\n            <td>{product.price}</td>\n            <td>{product.quantity}</td>\n            <td>\n                <button onClick={() => this.setState({ editMode: true })}>Edit</button>\n                <button onClick={() => onRemoveProduct(product.id)}>Remove</button>\n            </td>\n        </tr>\n        )\n    }\n    \n    static propTypes = {\n        onRemoveProduct: PropTypes.func.isRequired,\n        onEditProduct: PropTypes.func.isRequired,\n        product: PropTypes.shape({\n            id: PropTypes.string,\n            title: PropTypes.string,\n            price: PropTypes.string,\n            quantity: PropTypes.string,\n            type: PropTypes.string\n        }).isRequired\n    }\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport ProductRow from './ProductRow'\nimport ProductFormRow from './ProductFormRow'\n\nexport default function ProductList({\n    products,\n    onRemoveProduct,\n    onAddProduct,\n    onEditProduct,\n    color\n}) {\n    return (\n        <table className='product-table'>\n            <thead>\n                <tr>\n                    <td style={{ color }}>\n                        Название\n                    </td>\n                    <td>\n                        Тип\n                    </td>\n                    <td>\n                        Цена\n                    </td>\n                    <td>\n                        Остаток\n                    </td>\n                    <td>\n                    </td>\n                </tr>\n            </thead>\n            <tbody>\n                {products.map(product =>\n                    <ProductRow\n                        onRemoveProduct={onRemoveProduct}\n                        onEditProduct={onEditProduct}\n                        key={product.id}\n                        product={product}\n                    />\n                 )}\n                <ProductFormRow onSubmit={onAddProduct} />\n            </tbody>\n        </table>\n    )\n}\n\n\nProductList.propTypes = {\n    products: PropTypes.array.isRequired,\n    onRemoveProduct: PropTypes.func.isRequired,\n    onAddProduct: PropTypes.func.isRequired,\n    onEditProduct: PropTypes.func.isRequired,\n    color: PropTypes.string\n}\n\nProductList.defaultProps = {\n    color: 'red'\n}","\n\n\nexport default {\n    fetchProducts: () => {\n        return new Promise((resolve) => {\n            setTimeout(() => {\n                resolve([\n                    {\n                     id: '1', \n                     title: 'Samsung Galaxy S10',\n                     type: 'device',\n                     price: '800$',\n                     quantity: '10',\n                    },\n                    {\n                     id: '2', \n                     title: 'IPhone X',\n                     type: 'device',\n                     price: '600$',\n                     quantity: '10',\n                    },\n                    {\n                     id: '3', \n                     title: 'Платье',\n                     type: 'clothes',\n                     price: '50$',\n                     quantity: '5',\n                    }\n                ])\n            }, 1000)\n        })\n    }\n}","import React, { Component } from 'react'\n\nexport default class ErrorBoundary extends Component {\n    state = {\n        hasError: false\n    }\n    static getDerivedStateFromError(error) {\n        // Обновить состояние с тем, чтобы следующий рендер показал запасной UI.\n        console.log(error);\n        return { hasError: true };\n      }\n    \n    componentDidCatch(error, errorInfo) {\n        // Можно также сохранить информацию об ошибке в соответствующую службу журнала ошибок\n        console.log(error);\n\n    }\n    render() {\n        if (this.state.hasError) return <h1>Что-то пошло не так <button onClick={this.props.resolve}>\n            click here\n            </button></h1>\n        return this.props.children;\n    }\n}\n","import React, { Component } from 'react'\n\nexport default class FocusInput extends Component {\n    constructor(props) {\n        super(props);\n        this.inputRef = React.createRef();\n    }\n    focusOnInput() {\n        this.inputRef.current.focus();\n    }\n    render() {\n        return (\n            <div>\n            <input ref={this.inputRef} type=\"text\"/>\n            <div>\n                Input Component with complexity logic\n            </div>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport ProductList from './components/ProductList'\nimport productsApi from './products-api';\nimport ErrorBoundary from './components/ErrorBoundary';\n\nexport default class Week1 extends Component {\n    state = {\n       products: [],\n       isFetching: false\n    }\n\n    componentDidMount() {\n        this.setState({ isFetching: true })\n        productsApi\n            .fetchProducts()\n            .then(products => this.setState({ products, isFetching: false }))   \n    }\n\n    removeProduct = id => {\n        const { products } = this.state;\n        this.setState({ \n            products: products.filter(product => product.id !== id)\n        })\n    }\n    addProduct = newProduct => {\n        const { products } = this.state;\n        this.setState({ \n            products: [\n                ...products,\n                {\n                    id: Math.random().toString(8),\n                    ...newProduct\n                }\n            ]\n        })\n    }\n\n    editProduct = updatedProduct => {\n        const { products } = this.state;\n        this.setState({\n            products: products.map(product => product.id === updatedProduct.id ? updatedProduct : product)\n        })\n    }\n\n    render() {\n        const { isFetching } = this.state;\n        if (isFetching) return <div className='loader'></div>\n        return (\n            <div className=\"week1\">\n                <ErrorBoundary resolve={() => alert('Help me')}>\n                    <ProductList\n                        onAddProduct={this.addProduct}\n                        onEditProduct={this.editProduct}\n                        onRemoveProduct={this.removeProduct}\n                        products={this.state.products} \n                    /> \n                </ErrorBoundary>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\n\nexport default class Cube extends Component {\n    state = {\n        color: 'red'\n    }\n\n    componentDidMount() {\n        this.interval = setInterval(() => {\n            this.setState(state => {\n                return {\n                    color: state.color === 'red' ? 'green' : 'red'\n                }\n            })\n        }, 1000)\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.interval)\n    }\n\n    render() {\n        const { color } = this.state;\n        return (\n            <div className={`cube ${color}`}>\n                \n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport FocusInput from './FocusInput.js';\n\nexport default class AutoFocusInput extends Component {\n    constructor(props) {\n        super(props);\n        this.focusInput = React.createRef();\n    }\n    componentDidMount() {\n        this.focusInput.current.focusOnInput();\n    }\n    render() {\n        return (\n            <FocusInput ref={this.focusInput} />\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { Comment } from 'semantic-ui-react';\nimport { number } from 'prop-types'\n\nexport default class Comments extends Component {\n    static propTypes = {\n        postId: number.isRequired\n    }\n    state = {\n        comments: [],\n        loading: false\n    }\n    componentDidMount() {\n        if (this.props.postId)\n        this.fetchComments();\n    }\n    fetchComments() {\n        this.setState({ loading: true });\n        fetch(`https://jsonplaceholder.typicode.com/posts/${this.props.postId}/comments`)\n            .then(response => response.json())\n            .then(data => this.setState({ comments: data, loading: false }))\n    }\n    render() {\n        const { comments } = this.state;\n        return (\n            <Comment.Group>\n                { comments.map(comment => (\n                 <Comment key={comment.id}>\n                    <Comment.Avatar src='https://www.kindpng.com/picc/m/78-786207_user-avatar-png-user-avatar-icon-png-transparent.png' />\n                    <Comment.Content>\n                        <Comment.Author as='a'>{comment.email}</Comment.Author>\n                        <Comment.Metadata>\n                            <div>{comment.name}</div>\n                        </Comment.Metadata>\n                        <Comment.Text>{comments.body}</Comment.Text>\n                        <Comment.Actions>\n                        <Comment.Action>Reply</Comment.Action>\n                        </Comment.Actions>\n                    </Comment.Content>\n                </Comment>\n                )) }\n            </Comment.Group>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { Item } from 'semantic-ui-react';\nimport { shape, string, number } from 'prop-types'\nimport Comments from './Comments';\n\nexport default class Post extends Component {\n    static propTypes = {\n        post: shape({\n            id: number,\n            title: string,\n            body: string\n        })\n    }\n\n    state = {\n        showComments: false\n    }\n    onShowComments = () => {\n        this.props.onClickPost(this.props.post);\n        this.setState({ showComments: true })\n    }\n    render() {\n        const { showComments } = this.state;\n        const { onClickPost, post } = this.props;\n        return (\n            <Item.Group>\n                <Item>\n                    <Item.Content>\n                        <Item.Header onClick={() => onClickPost(post)} as='a'>{post.title}</Item.Header>\n                        <Item.Meta>Description</Item.Meta>\n                        <Item.Description>\n                            {post.body}\n                        </Item.Description>\n                        <Item.Extra>\n                            <a onClick={this.onShowComments}>Comments</a>\n                        </Item.Extra>\n                        {showComments &&\n                        <Item.Extra>\n                            <Comments postId={post.id} />\n                        </Item.Extra>\n                        }\n                    </Item.Content>\n                </Item>\n        </Item.Group>\n        )\n    }\n}\n","import React from 'react'\n\n// hoc\n\nexport default function postsProvider(Component) {\n    class PostsProvider extends React.Component {\n        state = {\n            posts: [], \n            loading: false\n        }\n        componentDidMount() {\n            this.fetchPosts();\n        }\n        fetchPosts() {\n            this.setState({ loading: true });\n            fetch('https://jsonplaceholder.typicode.com/posts')\n                .then(response => response.json())\n                .then(data => this.setState({ posts: data, loading: false }))\n        }\n        render() {\n            const { posts, loading } = this.state;\n            return <Component {...this.props} posts={posts} isFetching={loading} />\n        }\n    }\n    return PostsProvider;    \n}","import React, { Component } from 'react'\nimport { func } from 'prop-types'\nimport { Container, Loader, Dimmer } from 'semantic-ui-react';\nimport Post from './Post'\n// import PostsProvider from './providers/PostsProvider';\nimport postsProvider from './providers/postsHoc';\n\nclass PostList extends Component {\n\n    static propTypes = {\n        onSelectPost: func.isRequired\n    }\n\n    render() {\n        const { onSelectPost, posts, isFetching } = this.props;\n        return (\n            <Container>\n                <div>\n                    <Dimmer active={isFetching} inverted>\n                        <Loader inverted>Loading</Loader>\n                    </Dimmer>\n                    {posts.map(post => <Post key={post.id} post={post} onClickPost={onSelectPost} /> )}\n                </div>\n            </Container>\n        )\n    }\n}\n\nexport default postsProvider(PostList);","import React, { Component } from 'react'\nimport { Card, List, Icon, Dimmer, Loader, Segment } from 'semantic-ui-react'\nimport { number } from 'prop-types'\n\nexport default class AuthorInfo extends Component {\n    static propTypes = {\n      authorId: number\n    }\n    static defaultProps = {\n      authorId: null\n    }\n    state = {\n        authorInfo: null,\n        albums: [],\n        loading: false\n    }\n    componentDidMount() {\n        if (this.props.authorId) {\n            this.fetchAuthorInfo();\n            this.fetchAlbums();\n        }\n    }\n    componentDidUpdate(prevProps) {\n        if (this.props.authorId !== prevProps.authorId) {\n            this.fetchAuthorInfo();\n            this.fetchAlbums();\n        }\n    }\n    fetchAuthorInfo() {\n        this.setState({ loading: true });\n        fetch(`https://jsonplaceholder.typicode.com/users/${this.props.authorId}`)\n            .then(response => response.json())\n            .then(data => this.setState({ authorInfo: data, loading: false }))\n    }\n    fetchAlbums() {\n        fetch(`https://jsonplaceholder.typicode.com/users/${this.props.authorId}/albums`)\n            .then(response => response.json())\n            .then(data => this.setState({ albums: data }))\n    }\n    render() {\n        const { loading, albums, authorInfo } = this.state;\n        if (!authorInfo) {\n            return <Segment>Select any post</Segment>\n        }\n        return (\n            <Card className='author-column'>\n            <Dimmer inverted active={loading}><Loader inverted>Loading...</Loader></Dimmer>\n            <Card.Content>\n              <Card.Header>{authorInfo.name}</Card.Header>\n              <Card.Meta>\n                <span className='date'>username: {authorInfo.username}</span>\n              </Card.Meta>\n              <Card.Meta>\n                <span className='email'>email: {authorInfo.email}</span>\n              </Card.Meta>\n              <Card.Description>\n                {authorInfo.name} works in <strong>{authorInfo.company.name}</strong>\n              </Card.Description>\n              <Card.Meta>\n                <span className='phone'>phone: {authorInfo.phone}</span>\n              </Card.Meta>\n            </Card.Content>\n            <Card.Content extra>\n              <a>\n                <Icon name='user' />\n                {albums.length} Albums\n              </a>\n            </Card.Content>\n            <Card.Content>\n                <List>\n                    { albums.map(a => <List.Item key={a.id}>{a.title}</List.Item>) }\n                </List>\n             </Card.Content>\n          </Card>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { Grid } from 'semantic-ui-react'\nimport 'semantic-ui-css/semantic.min.css'\nimport PostList from './components/PostList'\nimport AuthorInfo from './components/AuthorInfo'\n\nexport default class Blog extends Component {\n    state = {\n        currentAuthorId: null\n    }\n    onSelectPost = post => {\n        this.setState({ currentAuthorId: post.userId })\n    }\n    render() {\n        return (\n            <Grid columns={3}>\n                <Grid.Row>\n                    <Grid.Column>\n                        <PostList onSelectPost={this.onSelectPost} />\n                    </Grid.Column>\n                    <Grid.Column>\n                        <AuthorInfo authorId={this.state.currentAuthorId} />\n                    </Grid.Column>\n                </Grid.Row>\n            </Grid>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport GlideJs from '@glidejs/glide'\nimport '@glidejs/glide/dist/css/glide.core.min.css'\nimport \"@glidejs/glide/dist/css/glide.theme.min.css\";\n\nexport default class Glide extends Component {\n\n    constructor(props) {\n        super(props);\n        this.slider = React.createRef();\n        this.glider = null;\n    }\n\n    static defaultProps = {\n        bullets: true\n    }\n\n    componentDidMount() {\n        this.glider = new GlideJs(this.slider.current, this.props.options).mount()\n    }\n\n    componentDidUpdate(prevProps) {\n        if(this.props.options !== prevProps.options) {\n            this.glider.update(this.props.options)\n        }\n    }\n\n    componentWillUnmount() {\n        this.glider.destroy()\n    }\n\n    render() {\n        const { children, bullets } = this.props;\n        return (\n            <div ref={this.slider} className=\"glide\">\n                <div className=\"glide__track\" data-glide-el=\"track\">\n                    <ul className=\"glide__slides\">\n                        {children.map(img =>  <li className=\"glide__slide\">{img}</li>)}\n                    </ul>\n                </div>\n                <div className=\"glide__arrows\" data-glide-el=\"controls\">\n                    <button className=\"glide__arrow glide__arrow--left\" data-glide-dir=\"<\">prev</button>\n                    <button className=\"glide__arrow glide__arrow--right\" data-glide-dir=\">\">next</button>\n                </div>\n                {bullets &&\n                <div className=\"glide__bullets\" data-glide-el=\"controls[nav]\">\n                {children.map((_, i) => <button className=\"glide__bullet\" data-glide-dir={`=${i}`}></button> )}\n                </div>\n                }\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\n\nexport default class Draggable extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isDragging: false,\n            x: 0,\n            y: 0,\n            startX: 0,\n            startY: 0\n        }\n        this.draggable = React.createRef();\n    }\n    componentDidMount() {\n        window.addEventListener('mouseup', this.resetDraggable)\n        window.addEventListener('mousemove', this.trackMousePosition)\n    }\n    componentWillUnmount() {\n        window.removeEventListener('mouseup', this.resetDraggable)\n        window.removeEventListener('mousemove', this.trackMousePosition)\n    }\n    resetDraggable = () => {\n        this.setState({ isDragging: false })\n    }\n    trackMousePosition = e => {\n        if (this.state.isDragging) {\n            this.setState({ \n                x: e.pageX,\n                y: e.pageY\n            })\n        }\n    }\n    startDragging = e => {\n        const { offsetLeft, offsetTop } = this.draggable.current;\n        this.setState({\n            isDragging: true,\n            x: e.pageX,\n            y: e.pageY,\n            startX: e.pageX - offsetLeft,\n            startY: e.pageY - offsetTop\n        })\n    }\n    render() {\n        const { x, y, startX, startY } = this.state;\n        const styles = {\n            position: 'absolute',\n            left: x - startX,\n            top: y - startY\n        }\n        return (\n            <div\n                style={styles}\n                className='draggable'\n                onMouseDown={this.startDragging}\n                ref={this.draggable}\n            >\n                {this.props.children}\n            </div>\n        )\n    }\n}\n","import React from 'react'\n\nexport default function Circle() {\n    return (\n        <div className='cirlce'></div>\n    )\n};","import { Component } from 'react'\n\n// render-props\nexport default class PostsProvider extends Component {\n    state = {\n        posts: [], \n        loading: false\n    }\n    componentDidMount() {\n        this.fetchPosts();\n    }\n    fetchPosts() {\n        this.setState({ loading: true });\n        fetch('https://jsonplaceholder.typicode.com/posts')\n            .then(response => response.json())\n            .then(data => this.setState({ posts: data, loading: false }))\n    }\n    render() {\n        const { posts, loading } = this.state;\n        return this.props.children(posts, loading)\n    }\n}\n","import React, { Component } from 'react'\nimport Draggable from './Draggable'\nimport Circle from './Circle'\nimport PostsProvider from '../blog/components/providers/PostsProvider'\n\nexport default class Example extends Component {\n    render() {\n        return (\n            <div>\n                <Draggable>\n                    <Circle />\n                </Draggable>\n                <Draggable>\n                    <img draggable={false} src=\"https://pbs.twimg.com/profile_images/378800000249743035/d906c6416338d535b9c17be0576224ba.png\" alt=\"\"/>\n                </Draggable>\n            </div>\n        )\n    }\n}\n","import React from 'react';\n\nconst ThemeContext = React.createContext('light')\n\nexport default ThemeContext;\n","import React from 'react';\n\nconst UserContext = React.createContext('email@gmail.com')\n\nexport default UserContext;\n","import React, { Component } from 'react'\nimport ThemeContext from './ThemeContext';\nimport UserContext from './UserContext';\nimport './styles.css';\n\nexport default class Button extends Component {\n    static contextType = ThemeContext\n    render() {\n        const theme = this.context;\n        return (\n            <div className='btn' style={{ color: theme === 'light' ? 'black' : 'white', backgroundColor: theme === 'light' ? 'lightgrey' : 'black' }}>\n                Click Me \n            </div>   \n        )\n    }\n}\n","import React, { Component, useCallback } from 'react'\nimport Button from './Button'\nimport ThemeContext from './ThemeContext'\n\nexport default class Text extends Component {\n    static contextType = ThemeContext\n    render() {\n        const theme = this.context;\n        return (\n            <div className={theme}>\n                Lorem ipsum, dolor sit amet consectetur adipisicing elit. Nam odio deserunt magnam ut voluptatum, dolores autem, temporibus doloribus aspernatur quam natus rem perspiciatis iure tempore quisquam ducimus pariatur deleniti distinctio!\n                <Button />\n            </div>\n        )\n    }\n}\n\n\nfunction TodoItem (props) {\n    const { todo, onEditTodo } = props\n\n    const editTodo = useCallback(\n        () => {\n            fetch({ method: 'PUT', url: `/todo/item/${todo.id}` })\n            .then(res => res.json())\n            .then(data => {\n                onEditTodo(data)\n            })\n        },\n        [todo.id, onEditTodo],\n    )\n    return (\n        <div onClick={editTodo}>\n            ...\n        </div> \n    )\n}","import React, { Component } from 'react'\nimport ThemeContext from './ThemeContext';\nimport UserContext from './UserContext';\nimport Text from './Text';\n\n\n\nexport default class Example extends Component {\n    state = {\n        theme: 'light',\n        email: 'email@gmail.com'\n    }\n    render() {\n        return (\n            <div className='context-example'>\n                <button onClick={() => this.setState({ theme: 'light' })}>Light</button>\n                <button onClick={() => this.setState({ theme: 'dark' })}>Dark</button>\n               <ThemeContext.Provider value={this.state.theme}>\n                   <UserContext.Provider value={this.state.email}>\n                        <Text />\n                   </UserContext.Provider>\n               </ThemeContext.Provider>   \n            </div>\n        )\n    }\n}\n","import React, { useState } from 'react';\n\n\nclass Example1 extends React.Component {\n    state = {\n        name: 'John',\n        counter: 0\n    }\n    changeName = (name) => {\n        this.setState({ name })\n    }\n    increment = () => {\n        this.setState({\n            counter: this.state.counter + 1\n        })\n    }\n    render() {\n        return (\n            <div>\n                Hello {this.state.name}\n                <button onClick={() => this.changeName('Zoi')}>Change Name</button> \n                Count: {this.state.count} <button onClick={this.increment}>+</button>\n            </div>\n        )\n    }\n}\n\nexport default function Example2 () {\n    const [ name, setName ] = useState('John')\n    const [ count, setCount ] = useState(0)\n    return (\n        <div>\n            Hello {name} \n            <button onClick={() => setName('Zoi')}> Change Name</button> \n            Counter: {count} <button onClick={() => setCount(count + 1)}>+</button>\n        </div>\n    )\n}\n\n\n","import React from 'react';\n\nconst ThemeContext = React.createContext({\n  theme: 'light',\n  toggleTheme: () => {},\n});\n\nexport default ThemeContext;\n","import axios from 'axios';\n\nconst apiClient = axios.create({\n    baseURL: 'https://jsonplaceholder.typicode.com/'\n})\n\nexport default apiClient;\n","import React from 'react'\nimport { Header, Container } from 'semantic-ui-react'\n\n function HomePage() {\n    return (\n        <Container className='page'>\n            <Header>Welcome to the BlogV2</Header>\n       </Container>\n    )\n}\n\nexport default HomePage","import axios from 'axios';\n\nconst apiClient = axios.create({\n    baseURL: 'https://jsonplaceholder.typicode.com/'\n})\n\nexport default apiClient","import { useEffect, useState } from 'react';\nimport apiClient from '../api-client';\n\nexport default function useData(path, initialValue, immediateLoading = true) {\n    const [data, setData] = useState(initialValue);\n    const [error, setError] = useState(null)\n    const [isFetching, setFetching] = useState(false);\n\n    useEffect(() => {\n        if (immediateLoading) {\n            setFetching(true)\n            apiClient.get(path)\n                .then(response => {\n                    setFetching(false)\n                    setData(response.data);\n                })\n                .catch(err => {\n                    setFetching(false)\n                    setError(err.response)\n                })\n        }\n    }, [path, immediateLoading])\n\n    return [data, isFetching, error]\n}","import React from 'react'\nimport { Link } from 'react-router-dom';\nimport { Comment, Icon } from 'semantic-ui-react';\nimport useData from '../hooks/useData';\n\nexport default function Comments({ postId }) {\n    const [comments, isFetching] = useData(`/posts/${postId}/comments`, [])\n    if (isFetching) return <Icon name='asterisk' loading />\n    return (\n        <Comment.Group>\n                { comments.map(comment => (\n                 <Comment key={comment.id}>\n                    <Comment.Avatar src='https://www.kindpng.com/picc/m/78-786207_user-avatar-png-user-avatar-icon-png-transparent.png' />\n                    <Comment.Content>\n                        <Comment.Author>\n                            <Link to={`/users/${comment.email}`}>{comment.email}</Link>\n                         </Comment.Author>\n                        <Comment.Text>{comment.body}</Comment.Text>\n                    </Comment.Content>\n                </Comment>\n                )) }\n        </Comment.Group>\n    )\n}\n","import React, { useEffect } from 'react'\nimport { Link } from 'react-router-dom';\nimport { Item } from 'semantic-ui-react';\nimport { useState } from 'react';\nimport Comments from './Comments';\nimport useData from '../hooks/useData';\n\nexport default function PostItem({ post }) {\n    const [hasCommentsDisplayed, setCommentsDisplaying] = useState(false)\n    const [ user ] = useData(`/users/${post.userId}`, null, hasCommentsDisplayed)\n\n    return (\n        <Item>\n            <Item.Content>\n                <Item.Header as='a'>{post.title}</Item.Header>\n                <Item.Description>\n                    {post.body}\n                </Item.Description>\n                <Item.Extra>\n                    <Link to={`/users/${post.userId}`}>Go to {user ? user.name : 'Author'}</Link>\n                </Item.Extra>\n                <Item.Extra onClick={() => setCommentsDisplaying(!hasCommentsDisplayed)}>\n                    Comments\n                </Item.Extra>\n                {hasCommentsDisplayed &&\n                <Item.Extra>\n                    <Comments postId={post.id} />\n                </Item.Extra>\n                }\n            </Item.Content>\n        </Item>\n    )\n}\n","import React from 'react'\nimport { Container, Dimmer, Loader, Item } from 'semantic-ui-react';\nimport useData from '../hooks/useData';\nimport PostItem from '../components/PostItem';\n\nexport default function PostsPage() {\n\n    const [posts, isFetching] = useData('/posts', []);\n\n    return (\n        <Container className='page'>\n            <Dimmer active={isFetching} inverted>\n                <Loader></Loader>\n            </Dimmer>\n            <Item.Group className='posts'>\n                {posts.map(post => <PostItem key={post.id} post={post} />)}\n            </Item.Group>\n        </Container>\n    )\n}\n\n","import React from 'react'\nimport useData from '../hooks/useData'\nimport { Dimmer, Loader, Grid, Card, Image, Container } from 'semantic-ui-react';\nimport { Link,  } from 'react-router-dom'\n\nexport default function UsersPage() {\n    const [users, isFetching] = useData('/users', []);\n\n    return (\n        <Container className='page'>\n         <Dimmer active={isFetching} inverted><Loader /></Dimmer>\n        <Grid className='users' columns={4}>\n        {users.map(user => (\n            <Grid.Column>\n                <Card style={{ width: '100%' }}>\n                    <Image src='https://react.semantic-ui.com/images/avatar/large/matthew.png' wrapped ui={false} />\n                    <Card.Content>\n                    <Card.Header>\n                        <Link to={`/users/${user.id}`} className='email'>{user.name}</Link>\n                    </Card.Header>\n                    <Card.Meta>\n                        <Link to={`/users/${user.id}`} className='email'>{user.email}</Link>\n                    </Card.Meta>\n                    <Card.Description>\n                    {user.address.street} {user.address.suite}, {user.address.city}\n                    </Card.Description>\n                    </Card.Content>\n                    <Card.Content>\n                </Card.Content>\n                </Card>\n            </Grid.Column>\n        ))}\n      </Grid>\n      </Container>\n\n    )\n}\n","import React from 'react'\nimport {  Container, Item, Loader, Dimmer} from 'semantic-ui-react'\nimport { Link } from 'react-router-dom'\nimport useData from '../hooks/useData'\n\nexport default function AlbumsPage() {\n    const [albums, isFetching] = useData('/albums', []);\n    return (\n        <Container className='page'>\n            <Dimmer active={isFetching} inverted>\n                <Loader></Loader>\n            </Dimmer>\n            <Item.Group className='posts'>\n                {albums.map(album =>(\n                    <Item>\n                    <Item.Content>\n                        <Item.Header>{album.title}</Item.Header>\n                        <Item.Extra>\n                            <Link to={`/users/${album.userId}/albums/${album.id}`}>See photos</Link>\n                        </Item.Extra>\n                    </Item.Content>\n                </Item>\n                ))}\n            </Item.Group>\n        </Container>\n    )\n}\n","import React from 'react'\nimport { useParams, Redirect } from 'react-router-dom'\nimport Glide from '../../../week-3/glide/Glide'\nimport { Dimmer, Loader, Container, Image, Header } from 'semantic-ui-react'\nimport useData from '../hooks/useData';\n\nexport default function AlbumPage() {\n    const { userId, albumId } = useParams();\n    const [album, , err] = useData(`/albums/${albumId}`, {});\n    const [photos, isFetching ] = useData(`/albums/${albumId}/photos`, []);\n \n    if (err && err.status === 404) {\n        console.log(err);\n        return <Redirect to={`/users/${userId}`} />\n    }\n    return (\n        <Container className='page'>\n            <Dimmer inverted active={isFetching}><Loader active></Loader></Dimmer>\n            <Header>{album.title}</Header>\n            {photos.length > 0 &&\n            <Glide options={{ perView: 3 }} bullets={false}>\n                {photos.map(photo => <Image src={photo.url} rounded></Image>)}\n            </Glide>\n            }\n        </Container>\n    )\n}\n","import React from 'react'\nimport { Header, Container } from 'semantic-ui-react';\n\nexport default function NotFoundPage() {\n    return (\n        <Container className='page'>\n            <Header>\n                404 Page not Found\n            </Header>\n        </Container>\n    )\n}\n","import React from 'react'\nimport { useParams, Switch, Route , useRouteMatch, Link} from 'react-router-dom'\nimport { Card, Image, Icon, Container, Dimmer, Loader, Header, List, Grid } from 'semantic-ui-react'\nimport useData from '../hooks/useData';\nimport AlbumPage from './AlbumPage';\nimport NotFoundPage from './404';\n\nexport default function UserPage() {\n    const { userId } = useParams();\n    let { path, url } = useRouteMatch();\n\n    const [user, isFetching] = useData(`/users/${userId}`, null)\n    const [ albums ] = useData(`/users/${userId}/albums`, []);\n\n    return (\n        <Container className='page'>\n            <Dimmer active={isFetching || !user} inverted><Loader /></Dimmer>\n            {user &&\n            <Grid>\n                <Grid.Column width={6}>\n                    <Card fluid>\n                        <Image src='https://react.semantic-ui.com/images/avatar/large/matthew.png' wrapped ui={false} />\n                        <Card.Content>\n                        <Card.Header>{user.name}</Card.Header>\n                        <Card.Meta>\n                            <span className='email'>{user.email}</span>\n                        </Card.Meta>\n                        <Card.Description>\n                        {user.address.street} {user.address.suite}, {user.address.city}\n                        </Card.Description>\n                        </Card.Content>\n                        <Card.Content extra>\n                        <a>\n                            <Icon name='user' />\n                            {albums.length} Albums\n                        </a>\n                        </Card.Content>\n                        <Card.Content>\n                        <List>\n                        {albums.map(album => (\n                            <List.Item key={album.id}>\n                                <Link to={`${url}/albums/${album.id}`}>{album.title}</Link>\n                            </List.Item>\n                        ))}\n                        </List>\n                    </Card.Content>\n                </Card>\n                </Grid.Column>\n                <Grid.Column  width={10}>\n                    <Switch>\n                        <Route exact path={path}>\n                            <Header as='h3'>Select a album.</Header>\n                        </Route>\n                        <Route path={`${path}/albums/:albumId`} exact>\n                            <AlbumPage />\n                        </Route>\n                        <Route path='*'>\n                            <NotFoundPage/>\n                        </Route>\n                    </Switch>\n                </Grid.Column>\n            </Grid>\n            }\n        </Container>\n    )\n}\n","import React from 'react'\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\nimport { withRouter } from 'react-router-dom'\nimport './blog-v2.css'\nimport { Container, Header, Menu } from 'semantic-ui-react'\nimport { BrowserRouter as Router, Switch, NavLink, Route } from 'react-router-dom';\nimport HomePage from './containers/HomePage';\nimport PostsPage from './containers/PostsPage';\nimport UsersPage from './containers/UsersPage';\nimport AlbumsPage from './containers/AlbumsPage';\nimport UserPage from './containers/UserPage';\nimport NotFoundPage from './containers/404';\n\nconst AnimatedSwitch = withRouter(({ location }) => (\n    <TransitionGroup>\n      <CSSTransition \n        key={location.pathname.includes('/users/') ? undefined : location.key} \n        classNames=\"fade\" \n        timeout={250}\n      >\n        <Switch location={location}>\n            <Route path='/' exact component={HomePage} />\n            <Route path='/posts' exact component={PostsPage} />\n            <Route path='/users' exact component={UsersPage} />\n            <Route path='/users/:userId' component={UserPage} />\n            <Route path='/albums' exact component={AlbumsPage} />\n            <Route path='*' component={NotFoundPage} />\n        </Switch>\n      </CSSTransition>\n    </TransitionGroup>\n  ));\n\nexport default function Blog() {\n    return (\n        <Container>\n            <Router>\n                <Header>\n                    <NavLink to='/' activeClassName='active-nav'>Blog V2</NavLink>\n                </Header>\n                <Menu>\n                    <NavLink to='/posts' className='item' activeClassName='active-nav'>Posts</NavLink>\n                    <NavLink to='/users' className='item' activeClassName='active-nav'>Users</NavLink>\n                    <NavLink to='/albums' className='item' activeClassName='active-nav'>Albums</NavLink>\n                </Menu>\n                <AnimatedSwitch />\n            </Router>\n        </Container>\n    )\n}\n","export const ADD_TODO_SUCCESS = 'ADD_TODO_SUCCESS'\nexport const ADD_TODO_LOADING = 'ADD_TODO_LOADING'\nexport const REMOVE_TODO = 'REMOVE_TODO'\nexport const UPDATED_TODO = 'UPDATED_TODO'\n\nfunction timeout(ms) {\n    return new Promise((res) => {\n        setTimeout(res, ms)\n    })\n}\n\nconst addTodo = newTodo => {\n    return {\n        type: ADD_TODO_SUCCESS,\n        payload: newTodo\n    }\n}\n\nexport const addTodoAsync = newTodo => async dispatch => {\n    dispatch({\n        type: ADD_TODO_LOADING\n    })\n    await timeout(3000);\n    dispatch(addTodo(newTodo))\n}\n\nexport const removeTodo = removedId => {\n    return {\n        type: REMOVE_TODO,\n        payload: removedId\n    }\n}\nexport const updateTodo = updatedTodo => {\n    return {\n        type: UPDATED_TODO,\n        payload: updatedTodo\n    }\n}\n","import { ADD_TODO_SUCCESS, REMOVE_TODO, UPDATED_TODO, ADD_TODO_LOADING } from '../actions/todo';\n\nconst initialState = {\n    isLoading: false,\n    items: [\n        {\n            id: 1,\n            title: 'Walk the dog',\n            completed: false\n        },\n        {\n            id: 2,\n            title: 'Make a dinner',\n            completed: false\n        }\n    ]\n}\n\n\n\nexport default function todoReducer(state = initialState, action) {\n    switch(action.type) {\n        case ADD_TODO_SUCCESS: \n            return {\n                ...state,\n                items: [action.payload, ...state.items],\n                isLoading: false\n            }\n        case REMOVE_TODO:\n            return {\n                ...state,\n                items: state.items.filter(todo => todo.id !== action.payload)\n            }\n        case UPDATED_TODO:\n            return {\n                ...state,\n                items: state.items.map(todo => todo.id === action.payload.id ? { ...todo, ...action.payload } : todo)    \n            }\n        case ADD_TODO_LOADING: \n            return {\n                ...state,\n                isLoading: true\n            }        \n        default: return state;    \n    }\n}\n","import { combineReducers } from 'redux'\n\nimport todoReducer from './todo';\nimport countReducer from './count';\n\nconst appReducer = combineReducers({\n    todos: todoReducer,\n    count: countReducer\n});\n\n\nexport default appReducer;","import { INCEREMENT, DECREMENT } from '../actions/count'\n\nexport default function countReducer(state = 0, action) {\n    switch(action.type) {\n        case INCEREMENT:\n            return state + 1;\n        case DECREMENT:\n            return state - 1;\n        default: return state        \n    }\n}\n","export const INCEREMENT = 'INCEREMENT';\nexport const DECREMENT = 'DECREMENT';\n \n\nexport const increment = () => ({ type: INCEREMENT })\nexport const decrement = () => ({ type: DECREMENT })","import { createStore, applyMiddleware, compose } from 'redux';\nimport logger from 'redux-logger'\nimport thunk from 'redux-thunk'\nimport appReducer from './reducers'\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n    appReducer, \n    composeEnhancers(applyMiddleware(thunk, logger)),\n    );\n\nexport default store;","import React from 'react'\nimport { connect } from 'react-redux';\nimport { removeTodo } from '../redux/actions/todo'\n\nfunction TodoList({ todos, isLoading, dispatch }) {\n    return (\n        <div>\n            {isLoading && <div>Loading..</div>}\n            {todos.map(todo => (\n                <div key={todo.id}>{todo.title}  ||||||  <span onClick={() => dispatch(removeTodo(todo.id))}>X</span></div>\n            ))}\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    todos: state.todos.items,\n    isLoading: state.todos.isLoading\n})\n\n\nexport default connect(\n    mapStateToProps\n)(TodoList)","import React, { useState, useCallback} from 'react'\nimport { connect } from 'react-redux';\nimport { addTodoAsync } from '../redux/actions/todo'\n\nfunction AddTodoForm({ addNewTodo }) {\n    const [title, setTitle] = useState('');\n\n    const save = useCallback(() => {\n        addNewTodo({\n            id: Date.now(),\n            title,\n            completed: false\n        })\n        setTitle('')\n    }, [title, addNewTodo])\n\n    return (\n        <div>\n            <input value={title} onChange={e => setTitle(e.target.value)} type=\"text\"/>\n            <button onClick={save}>Add Todo</button>\n        </div>\n    )\n}\n\nconst mapDispatchToProps = dispatch => ({\n    addNewTodo: newTodo => dispatch(addTodoAsync(newTodo))\n})\n\n\nconst ConnectedAddTodoForm = connect(null, mapDispatchToProps)(AddTodoForm);\n\nexport default ConnectedAddTodoForm;\n","import React from 'react'\nimport { Provider } from 'react-redux'\nimport store from './redux/store'\n// import ReduxContext from './contexts/ReduxContext';\nimport TodoList from './containers/TodoList';\nimport AddTodoForm from './containers/AddTodoForm';\n\nexport default function App() {\n    return (\n        <Provider store={store}>\n            <AddTodoForm />\n            <TodoList />    \n        </Provider>\n    )\n}\n","import { combineReducers } from 'redux';\nimport { SELECT_SUBREDIT, FETCH_POSTS_SUCCESS, FETCH_POSTS_ERROR, FETCH_POSTS_REQUEST } from \"./actions\";\n\n\nfunction selectedSubredditReducer(state = 'reactjs', action) {\n    switch(action.type) {\n        case SELECT_SUBREDIT:\n            return action.payload;\n        default: \n            return state;    \n    }\n}\n\nfunction postsReducer(state = {\n    isLoading: false,\n    items: [],\n    error: null\n}, action) {\n    switch(action.type) {\n        case FETCH_POSTS_REQUEST:\n            return {\n                ...state,\n                error: null,\n                isLoading: true\n            }\n        case FETCH_POSTS_SUCCESS:\n            return {\n                ...state,\n                isLoading: false,\n                items: action.payload\n            }\n        case FETCH_POSTS_ERROR:   \n            return {\n                isLoading: false,\n                items: [],\n                error: action.payload\n            }\n        default: return state;   \n    }\n}\n\n\nconst rootReducer = combineReducers({\n    selectedSubreddit: selectedSubredditReducer,\n    posts: postsReducer\n})\n\nexport default rootReducer;\n","import axios from 'axios';\n\nexport const FETCH_POSTS_REQUEST = 'FETCH_POSTS_REQUEST';\nexport const FETCH_POSTS_SUCCESS = 'FETCH_POSTS_SUCCESS';\nexport const FETCH_POSTS_ERROR = 'FETCH_POSTS_ERROR';\nexport const SELECT_SUBREDIT = 'SELECT_SUBREDIT';\n\nexport function selectSubredit(subreddit) { // reactjs, frontend, backend\n    return {\n        type: SELECT_SUBREDIT,\n        payload: subreddit\n    }\n}\n\nconst fetchPostsRequests = () => ({\n    type: FETCH_POSTS_REQUEST\n})\n\nconst fetchPostsSuccess = (response) => ({\n    type: FETCH_POSTS_SUCCESS,\n    payload: response.data.data.children.map(child => child.data)\n})\n\nconst fetchPostsError = error => ({\n    type: FETCH_POSTS_ERROR,\n    payload: error.response\n})\n\nexport function fetchPosts(subreddit) {\n    return dispatch => {\n        dispatch(fetchPostsRequests())\n        axios.get(`https://www.reddit.com/r/${subreddit}.json`)\n            .then(response => dispatch(fetchPostsSuccess(response)))\n            .catch(error => dispatch(fetchPostsError(error)))\n    }\n\n}","import { createStore, compose, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n    rootReducer,\n    composeEnhancers(\n        applyMiddleware(thunk)\n    )\n);\n\nexport default store;\n","import React from 'react';\nimport './App.css';\nimport Week1 from './tasks/week-1/Week1';\nimport Week2 from './tasks/week-2/Week2';\n\n\nimport Blog from './tasks/week-3/blog/Blog';\nimport Glide from './tasks/week-3/glide/Glide'\n\nimport ExampleRenderProps from './tasks/week-3/render-props-example/Example';\n\nimport ExampleContext from './tasks/week-3/context/Example';\nimport ExampleUseState from './tasks/week-3/hooks/Example-use-state';\nimport ExampleUseEffect from './tasks/week-3/hooks/Example-use-effect';\n\nimport TodoApp from './tasks/week-4/todoapp-hw/TodoApp';\nimport UseMemoExample from './tasks/week-4/hooks-examples/use-callback.example'\n\nimport BlogV2 from './tasks/week-4/blog-v2/Blog';\n\nimport ReduxApp from './tasks/week-5/redux-examples/App'\n\nimport RedditApp from './tasks/week-6/reddit-app/RedditApp'\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <ReduxApp />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}